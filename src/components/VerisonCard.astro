---
import VersionHeader from "$components/VersionHeader.astro";
import PhaseCard from "./PhaseCard.astro";

import directus from "$services/directus";
import { readItem } from "@directus/sdk";

let { version, game } = Astro.props;
let events = version.events;

events = await Promise.all(
  events.map(async (e: any) => {
    e.featured_characters = await Promise.all(
      e.featured_characters.map(async (id: any) => {
        const charId = (
          await directus.request(readItem("events_characters", id))
        ).characters_id;
        return await directus.request(readItem("characters", charId));
      }),
    );
    e.featured_weapons = await Promise.all(
      e.featured_weapons.map(async (id: any) => {
        const weapId = (await directus.request(readItem("events_weapons", id)))
          .weapons_id;
        return await directus.request(readItem("weapons", weapId));
      }),
    );
    return e;
  }),
);
---

<section
  class="@container h-full grow flex flex-col gap-3 bg-white bg-opacity-30 p-4 shadow-md"
>
  <VersionHeader {version} {game} />

  <div class="h-full grow flex flex-col gap-3 lg:grid lg:grid-cols-2 lg:gap-5">
    {events.map((event: any) => <PhaseCard {event} />)}
  </div>
</section>
