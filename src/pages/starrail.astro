---
import Layout from "../layouts/Layout.astro";
import VersionSection from "../components/VersionSection.astro";
import FiveStarCard from "../components/FiveStarCard.astro";
import PhaseRateUps from "../components/PhaseRateUps.astro";
import PhaseCard from "../components/PhaseCard.astro";
import c from "../assets/characters.json";
import { Character } from "../classes/character";
import { getCollection, getEntry } from "astro:content";

const versions = await getCollection("versions", ({ id }) => {
  return id.startsWith("starrail");
});
const banners = (
  await getCollection("banners", ({ id }) => {
    return id.startsWith("starrail");
  })
).sort((a, b) => Date.parse(a.data.time) - Date.parse(b.data.time));

function getDate(v) {
  const phaseOne = banners.filter((banner) => {
    return banner.id.startsWith(`${v.id}`);
  })[0];
  if (phaseOne === undefined) {
    return "";
  } else {
    return phaseOne.data.time;
  }
}

function getCharacter(char, rarity?) {
  if (c[char] === undefined) {
    return { rarity: 5 };
  } else {
    return c[char];
  }
}
---

<Layout title="The Daily Drip | Honkai: Star Rail Banners">
  {
    versions.map((v) => (
      <VersionSection
        version={v.data.version}
        title={v.data.name}
        date={new Date(getDate(v))}
      >
        {banners
          .filter((banner) => {
            return banner.id.startsWith(`${v.id}`);
          })
          .map((b, i) => (
          <PhaseCard number={i + 1} date={new Date(b.data.time)}>
              {Array.from({ length: 2 }, (_, i) => {
                let char = b.data.characters.five[i];
                let spec = false;

                if (char && char.includes("?")) {
                  char = char.slice(0,-1);
                  spec = true;
                }

                if (b.data.characters.five[i] && c[char.replace(/\s/g, "")]) {
                  return (
                    <FiveStarCard
                      spec={spec}
                      character={
                        new Character(char, c[char.replace(/\s/g, "")])
                      }
                    />
                  );
                } else if (
                  b.data.characters.five[i] &&
                  !c[char.replace(/\s/g, "")]
                ) {
                  return (
                    <FiveStarCard
                      spec={spec}
                      character={
                        new Character(char, {
                          rarity: 5,
                          element: "starrail",
                          path: "starrail",
                          banner: "????",
                        })
                      }
                    />
                  );
                } else {
                  return (
                    <FiveStarCard
                      spec={spec}
                      character={
                        new Character("????", {
                          rarity: 5,
                          element: "starrail",
                          path:"starrail",
                          banner: "????",
                        })
                      }
                    />
                  );
                }
              })}
              <PhaseRateUps
                characters={b.data.characters.four.map((char) => {
                  return new Character(
                    char,
                    getCharacter(char.replace(/\s/g, ""), 4)
                  );
                })}
                weapons={b.data.weapons}
              />
            </PhaseCard>
          ))}
      </VersionSection>
    ))
  }
</Layout>

<style lang="scss"></style>
